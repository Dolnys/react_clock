{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","updateTime","console","info","toUTCString","slice","lastName","clockName","props","debug","clearInterval","setState","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6NAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,aAELC,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbA,EAASC,YAAcT,KAAKU,MAAMD,WAEpCL,QAAQO,MAAR,uBACkBH,EAASC,UAD3B,eAC2CT,KAAKU,MAAMD,cAnB5D,kCAwBE,WACER,OAAOW,cAAcZ,KAAKD,WAzB9B,wBA4BE,WACEC,KAAKa,SAAS,CACZhB,KAAM,IAAIC,SA9BhB,oBAkCE,WACE,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCd,KAAKU,MAAMD,YAC3C,YACD,sBAAMK,UAAU,cAAhB,SACGd,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,YAxCrD,GAA2BQ,IAAMC,WCP1B,SAASC,IACd,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAQX,IAAMG,EAAb,4MACEzB,MAAQ,CACNa,UAAW,UACXa,UAAU,GAHd,EAMEvB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKW,SAAS,CACZJ,UAAWQ,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKb,SAAS,CAAES,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKX,SAAS,CAAES,UAAU,SArBhC,kCAyBE,WACErB,OAAOW,cAAcZ,KAAKD,WA1B9B,oBA6BE,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,6CACCd,KAAKJ,MAAM0B,UACV,cAAC,EAAD,CACEA,SAAUtB,KAAKJ,MAAM0B,SACrBb,UAAWT,KAAKJ,MAAMa,mBApClC,GAAyBM,IAAMC,WCN/BW,IAASC,OAAO,cAAC,EAAD,eANK,CACnBnB,UAAW,UACXa,UAAU,EACVvB,QAAS,KAGgCwB,SAASM,eAAe,W","file":"static/js/main.ccac5413.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n  hasClock: boolean;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.updateTime();\n      /* eslint-disable no-console */\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(lastName: Props) {\n    if (lastName.clockName !== this.props.clockName) {\n      /* eslint-disable no-console */\n      console.debug(\n        `Renamed from ${lastName.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  updateTime() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.clockName}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nexport function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            hasClock={this.state.hasClock}\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nconst initialState = {\n  clockName: 'Clock-0',\n  hasClock: true,\n  timerId: 0,\n};\n\nReactDOM.render(<App {...initialState} />, document.getElementById('root'));\n"],"sourceRoot":""}